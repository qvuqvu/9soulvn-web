{"ast":null,"code":"import _slicedToArray from\"C:/Users/qvuqv/OneDrive/Documents/UIT/ecom2/MERN-Ecommerce/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/* eslint-disable react-hooks/exhaustive-deps */import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{Link}from'react-router-dom';import{Card}from'react-bootstrap';import Loader from'../components/Loader';import Message from'../components/Message';import{confirmUser}from'../actions/userActions';import Meta from'../components/Meta';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConfirmPage=function ConfirmPage(_ref){var match=_ref.match,history=_ref.history;var dispatch=useDispatch();var userConfirm=useSelector(function(state){return state.userConfirm;});// get the userInfo to check if user is confirmed or not\nvar loading=userConfirm.loading,error=userConfirm.error,isConfirmed=userConfirm.isConfirmed;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoggedIn=_useState2[0],setIsLoggedIn=_useState2[1];useEffect(function(){if(userInfo){setIsLoggedIn(true);}else{setIsLoggedIn(false);}},[]);useEffect(function(){// confirm user once the email token is available\ndispatch(confirmUser(match.params.token,isLoggedIn));},[dispatch,match,isLoggedIn]);if(loading||!isConfirmed&&!error){return/*#__PURE__*/_jsx(Loader,{});}else if(error){// redirect to login page after a 10 seconds\nsetTimeout(function(){history.push('/login');},10000);return/*#__PURE__*/_jsx(Message,{dismissible:true,variant:\"danger\",duration:10,children:\"Verfication Failed. Please try to login again.\"});}else if(isConfirmed){// set a variable in local storage to fill email aftrer redirecting to login page after email confirmation\nlocalStorage.setItem('fillEmailOnLoginPage','true');return/*#__PURE__*/_jsxs(Card,{style:{border:'none',margin:'0 auto'},children:[/*#__PURE__*/_jsx(Meta,{title:\"Confirm Password | Kosells\"}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Account Confirmed\"}),/*#__PURE__*/_jsx(Card.Text,{children:setIsLoggedIn?'Your account has been successfully verified! Go on and shop for the best deals of the day!':\"Your account has been successfully verified! Please\\n\\t\\t\\t\\t\\t\\tlogin and start exploring the best deals on all your\\n\\t\\t\\t\\t\\t\\tfavorite products.\"}),!setIsLoggedIn?/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login\"}):null]})]});}};export default ConfirmPage;","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","Link","Card","Loader","Message","confirmUser","Meta","ConfirmPage","match","history","dispatch","userConfirm","state","loading","error","isConfirmed","userLogin","userInfo","isLoggedIn","setIsLoggedIn","params","token","setTimeout","push","localStorage","setItem","border","margin"],"sources":["C:/Users/qvuqv/OneDrive/Documents/UIT/ecom2/MERN-Ecommerce/frontend/src/pages/ConfirmPage.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { confirmUser } from '../actions/userActions';\r\nimport Meta from '../components/Meta';\r\n\r\nconst ConfirmPage = ({ match, history }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst userConfirm = useSelector((state) => state.userConfirm); // get the userInfo to check if user is confirmed or not\r\n\tconst { loading, error, isConfirmed } = userConfirm;\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { userInfo } = userLogin;\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInfo) {\r\n\t\t\tsetIsLoggedIn(true);\r\n\t\t} else {\r\n\t\t\tsetIsLoggedIn(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\t// confirm user once the email token is available\r\n\t\tdispatch(confirmUser(match.params.token, isLoggedIn));\r\n\t}, [dispatch, match, isLoggedIn]);\r\n\r\n\tif (loading || (!isConfirmed && !error)) {\r\n\t\treturn <Loader />;\r\n\t} else if (error) {\r\n\t\t// redirect to login page after a 10 seconds\r\n\t\tsetTimeout(() => {\r\n\t\t\thistory.push('/login');\r\n\t\t}, 10000);\r\n\t\treturn (\r\n\t\t\t<Message dismissible variant='danger' duration={10}>\r\n\t\t\t\tVerfication Failed. Please try to login again.\r\n\t\t\t</Message>\r\n\t\t);\r\n\t} else if (isConfirmed) {\r\n\t\t// set a variable in local storage to fill email aftrer redirecting to login page after email confirmation\r\n\t\tlocalStorage.setItem('fillEmailOnLoginPage', 'true');\r\n\t\treturn (\r\n\t\t\t<Card style={{ border: 'none', margin: '0 auto' }}>\r\n\t\t\t\t<Meta title='Confirm Password | Kosells' />\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>Account Confirmed</Card.Title>\r\n\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t{setIsLoggedIn\r\n\t\t\t\t\t\t\t? 'Your account has been successfully verified! Go on and shop for the best deals of the day!'\r\n\t\t\t\t\t\t\t: `Your account has been successfully verified! Please\r\n\t\t\t\t\t\tlogin and start exploring the best deals on all your\r\n\t\t\t\t\t\tfavorite products.`}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t{!setIsLoggedIn ? <Link to='/login'>Login</Link> : null}\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default ConfirmPage;\r\n"],"mappings":"yJAAA,gDACA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,MAAOC,OAAP,KAAmB,sBAAnB,CACA,MAAOC,QAAP,KAAoB,uBAApB,CACA,OAASC,WAAT,KAA4B,wBAA5B,CACA,MAAOC,KAAP,KAAiB,oBAAjB,C,wFAEA,GAAMC,YAAW,CAAG,QAAdA,YAAc,MAAwB,IAArBC,MAAqB,MAArBA,KAAqB,CAAdC,OAAc,MAAdA,OAAc,CAC3C,GAAMC,SAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,YAAW,CAAGZ,WAAW,CAAC,SAACa,KAAD,QAAWA,MAAK,CAACD,WAAjB,EAAD,CAA/B,CAA+D;AAC/D,GAAQE,QAAR,CAAwCF,WAAxC,CAAQE,OAAR,CAAiBC,KAAjB,CAAwCH,WAAxC,CAAiBG,KAAjB,CAAwBC,WAAxB,CAAwCJ,WAAxC,CAAwBI,WAAxB,CAEA,GAAMC,UAAS,CAAGjB,WAAW,CAAC,SAACa,KAAD,QAAWA,MAAK,CAACI,SAAjB,EAAD,CAA7B,CACA,GAAQC,SAAR,CAAqBD,SAArB,CAAQC,QAAR,CACA,cAAoCpB,QAAQ,CAAC,KAAD,CAA5C,wCAAOqB,UAAP,eAAmBC,aAAnB,eAEArB,SAAS,CAAC,UAAM,CACf,GAAImB,QAAJ,CAAc,CACbE,aAAa,CAAC,IAAD,CAAb,CACA,CAFD,IAEO,CACNA,aAAa,CAAC,KAAD,CAAb,CACA,CACD,CANQ,CAMN,EANM,CAAT,CAQArB,SAAS,CAAC,UAAM,CACf;AACAY,QAAQ,CAACL,WAAW,CAACG,KAAK,CAACY,MAAN,CAAaC,KAAd,CAAqBH,UAArB,CAAZ,CAAR,CACA,CAHQ,CAGN,CAACR,QAAD,CAAWF,KAAX,CAAkBU,UAAlB,CAHM,CAAT,CAKA,GAAIL,OAAO,EAAK,CAACE,WAAD,EAAgB,CAACD,KAAjC,CAAyC,CACxC,mBAAO,KAAC,MAAD,IAAP,CACA,CAFD,IAEO,IAAIA,KAAJ,CAAW,CACjB;AACAQ,UAAU,CAAC,UAAM,CAChBb,OAAO,CAACc,IAAR,CAAa,QAAb,EACA,CAFS,CAEP,KAFO,CAAV,CAGA,mBACC,KAAC,OAAD,EAAS,WAAW,KAApB,CAAqB,OAAO,CAAC,QAA7B,CAAsC,QAAQ,CAAE,EAAhD,4DADD,CAKA,CAVM,IAUA,IAAIR,WAAJ,CAAiB,CACvB;AACAS,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAA6C,MAA7C,EACA,mBACC,MAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAV,CAAkBC,MAAM,CAAE,QAA1B,CAAb,wBACC,KAAC,IAAD,EAAM,KAAK,CAAC,4BAAZ,EADD,cAEC,MAAC,IAAD,CAAM,IAAN,yBACC,KAAC,IAAD,CAAM,KAAN,gCADD,cAEC,KAAC,IAAD,CAAM,IAAN,WACER,aAAa,CACX,4FADW,wJADf,EAFD,CASE,CAACA,aAAD,cAAiB,KAAC,IAAD,EAAM,EAAE,CAAC,QAAT,mBAAjB,CAAkD,IATpD,GAFD,GADD,CAgBA,CACD,CAtDD,CAwDA,cAAeZ,YAAf"},"metadata":{},"sourceType":"module"}