{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productCreateReviewReducer, productUpdateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userLoginRefreshReducer, userRegisterReducer, userSendEmailVerficationReducer, userConfirmReducer, userResetPasswordReducer, userDetailsReducer, userProfileUpdateReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListUserReducer, orderListAllReducer } from './reducers/orderReducers'; // combine all the above reducers to the store\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productCreateReview: productCreateReviewReducer,\n  productUpdate: productUpdateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userLoginRefresh: userLoginRefreshReducer,\n  userRegister: userRegisterReducer,\n  userSendEmailVerfication: userSendEmailVerficationReducer,\n  userConfirm: userConfirmReducer,\n  userResetPassword: userResetPasswordReducer,\n  userDetails: userDetailsReducer,\n  userProfileUpdate: userProfileUpdateReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListUser: orderListUserReducer,\n  orderListAll: orderListAllReducer\n}); // get a few cart items from the local storage\n\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []; // get the user info from local storage\n\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null; // get the shipping address from local storage\n\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}; // get refresh token from the local storage\n\nconst tokenInfoFromLocalStoage = localStorage.getItem('refreshToken') ? localStorage.getItem('refreshToken') : null; // set the initial state based on above local storage values\n\nconst initialState = {\n  cart: {\n    cartItems: [...cartItemsFromLocalStorage],\n    shippingAddress: shippingAddressFromLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  },\n  userLoginRefresh: {\n    tokenInfo: tokenInfoFromLocalStoage\n  }\n}; // user redux thunk for making async calls\n\nconst middleware = [thunk]; // create the redux store\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productCreateReviewReducer","productUpdateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userLoginRefreshReducer","userRegisterReducer","userSendEmailVerficationReducer","userConfirmReducer","userResetPasswordReducer","userDetailsReducer","userProfileUpdateReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","orderListUserReducer","orderListAllReducer","reducer","productList","productDetails","productDelete","productCreate","productCreateReview","productUpdate","productTopRated","cart","userLogin","userLoginRefresh","userRegister","userSendEmailVerfication","userConfirm","userResetPassword","userDetails","userProfileUpdate","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListUser","orderListAll","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","shippingAddressFromLocalStorage","tokenInfoFromLocalStoage","initialState","cartItems","shippingAddress","userInfo","tokenInfo","middleware","store"],"sources":["C:/Users/qvuqv/OneDrive/Documents/UIT/ecom2/MERN-Ecommerce/frontend/src/store.js"],"sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport {\r\n\tproductListReducer,\r\n\tproductDetailsReducer,\r\n\tproductDeleteReducer,\r\n\tproductCreateReducer,\r\n\tproductCreateReviewReducer,\r\n\tproductUpdateReducer,\r\n\tproductTopRatedReducer,\r\n} from './reducers/productReducers';\r\n\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\nimport {\r\n\tuserLoginReducer,\r\n\tuserLoginRefreshReducer,\r\n\tuserRegisterReducer,\r\n\tuserSendEmailVerficationReducer,\r\n\tuserConfirmReducer,\r\n\tuserResetPasswordReducer,\r\n\tuserDetailsReducer,\r\n\tuserProfileUpdateReducer,\r\n\tuserListReducer,\r\n\tuserDeleteReducer,\r\n\tuserUpdateReducer,\r\n} from './reducers/userReducers';\r\n\r\nimport {\r\n\torderCreateReducer,\r\n\torderDetailsReducer,\r\n\torderPayReducer,\r\n\torderDeliverReducer,\r\n\torderListUserReducer,\r\n\torderListAllReducer,\r\n} from './reducers/orderReducers';\r\n\r\n// combine all the above reducers to the store\r\nconst reducer = combineReducers({\r\n\tproductList: productListReducer,\r\n\tproductDetails: productDetailsReducer,\r\n\tproductDelete: productDeleteReducer,\r\n\tproductCreate: productCreateReducer,\r\n\tproductCreateReview: productCreateReviewReducer,\r\n\tproductUpdate: productUpdateReducer,\r\n\tproductTopRated: productTopRatedReducer,\r\n\tcart: cartReducer,\r\n\tuserLogin: userLoginReducer,\r\n\tuserLoginRefresh: userLoginRefreshReducer,\r\n\tuserRegister: userRegisterReducer,\r\n\tuserSendEmailVerfication: userSendEmailVerficationReducer,\r\n\tuserConfirm: userConfirmReducer,\r\n\tuserResetPassword: userResetPasswordReducer,\r\n\tuserDetails: userDetailsReducer,\r\n\tuserProfileUpdate: userProfileUpdateReducer,\r\n\tuserList: userListReducer,\r\n\tuserDelete: userDeleteReducer,\r\n\tuserUpdate: userUpdateReducer,\r\n\torderCreate: orderCreateReducer,\r\n\torderDetails: orderDetailsReducer,\r\n\torderPay: orderPayReducer,\r\n\torderDeliver: orderDeliverReducer,\r\n\torderListUser: orderListUserReducer,\r\n\torderListAll: orderListAllReducer,\r\n});\r\n\r\n// get a few cart items from the local storage\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems')\r\n\t? JSON.parse(localStorage.getItem('cartItems'))\r\n\t: [];\r\n\r\n// get the user info from local storage\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo')\r\n\t? JSON.parse(localStorage.getItem('userInfo'))\r\n\t: null;\r\n\r\n// get the shipping address from local storage\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress')\r\n\t? JSON.parse(localStorage.getItem('shippingAddress'))\r\n\t: {};\r\n\r\n// get refresh token from the local storage\r\nconst tokenInfoFromLocalStoage = localStorage.getItem('refreshToken')\r\n\t? localStorage.getItem('refreshToken')\r\n\t: null;\r\n\r\n// set the initial state based on above local storage values\r\nconst initialState = {\r\n\tcart: {\r\n\t\tcartItems: [...cartItemsFromLocalStorage],\r\n\t\tshippingAddress: shippingAddressFromLocalStorage,\r\n\t},\r\n\tuserLogin: {\r\n\t\tuserInfo: userInfoFromLocalStorage,\r\n\t},\r\n\tuserLoginRefresh: {\r\n\t\ttokenInfo: tokenInfoFromLocalStoage,\r\n\t},\r\n};\r\n\r\n// user redux thunk for making async calls\r\nconst middleware = [thunk];\r\n\r\n// create the redux store\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}