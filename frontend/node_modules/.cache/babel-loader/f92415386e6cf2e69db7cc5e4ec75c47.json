{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/qvuqv/OneDrive/Documents/UIT/ecom2/MERN-Ecommerce/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"C:/Users/qvuqv/OneDrive/Documents/UIT/ecom2/MERN-Ecommerce/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/qvuqv/OneDrive/Documents/UIT/ecom2/MERN-Ecommerce/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAILURE,USER_LOGIN_REFRESH_REQUEST,USER_LOGIN_REFRESH_SUCCESS,USER_LOGIN_REFRESH_FAILURE,USER_LOGOUT,USER_REGISTER_REQUEST,USER_REGISTER_SUCCESS,USER_REGISTER_FAILURE,USER_RESET_PASSWORD_REQUEST,USER_RESET_PASSWORD_SUCCESS,USER_RESET_PASSWORD_FAILURE,USER_EMAIL_VERIFICATION_REQUEST,USER_EMAIL_VERIFICATION_SUCCESS,USER_EMAIL_VERIFICATION_FAILURE,USER_CONFIRM_REQUEST,USER_CONFIRM_SUCCESS,USER_CONFIRM_FAILURE,USER_DETAILS_REQUEST,USER_DETAILS_SUCCESS,USER_DETAILS_FAILURE,USER_DETAILS_RESET,USER_PROFILE_UPDATE_REQUEST,USER_PROFILE_UPDATE_SUCCESS,USER_PROFILE_UPDATE_FAILURE,USER_LIST_REQUEST,USER_LIST_SUCCESS,USER_LIST_FAILURE,USER_DELETE_REQUEST,USER_DELETE_SUCCESS,USER_DELETE_FAILURE,USER_UPDATE_REQUEST,USER_UPDATE_SUCCESS,USER_UPDATE_FAILURE}from'../constants/userConstants';import{ORDER_CREATE_RESET,ORDER_USER_LIST_RESET}from'../constants/orderConstants';import axios from'axios';// login an user, can be a social login or a normal email verified login\nexport var loginUser=function loginUser(email,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var config,_yield$axios$post,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:USER_LOGIN_REQUEST});config={headers:{'Content-Type':'application/json'}};_context.next=5;return axios.post('/api/users/login',{email:email,password:password},config);case 5:_yield$axios$post=_context.sent;data=_yield$axios$post.data;dispatch({type:USER_LOGIN_SUCCESS,payload:_objectSpread(_objectSpread({},data),{},{isSocialLogin:false})});dispatch({type:USER_LOGIN_REFRESH_SUCCESS,payload:data.refreshToken});// store the refresh token and the rest of the user info in the local storage\nlocalStorage.setItem('refreshToken',data.refreshToken);localStorage.setItem('userInfo',JSON.stringify(_objectSpread(_objectSpread({},data),{},{isSocialLogin:false})));// remove the variable that helps prompt the user that email is not verified, each time they login\nlocalStorage.removeItem('promptEmailVerfication');_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);dispatch({type:USER_LOGIN_FAILURE,payload:_context.t0.response&&_context.t0.response.data.message?_context.t0.response.data.message:_context.t0.message});case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// used for refreshing the access tokens when the user logs in using email and password\nexport var refreshLogin=function refreshLogin(email){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch,getState){var _getState,userInfo,config,_yield$axios$post2,data,updatedUser;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:USER_LOGIN_REFRESH_REQUEST});_getState=getState(),userInfo=_getState.userLogin.userInfo;// avoid this if social login\nif(!userInfo.isSocialLogin){_context2.next=7;break;}dispatch({type:USER_LOGIN_REFRESH_SUCCESS,payload:null});_context2.next=13;break;case 7:config={headers:{'Content-Type':'application/json'}};_context2.next=10;return axios.post('/api/users/refresh',{email:email,token:userInfo.refreshToken},config);case 10:_yield$axios$post2=_context2.sent;data=_yield$axios$post2.data;if(data.success){dispatch({type:USER_LOGIN_REFRESH_SUCCESS,payload:data});updatedUser=_objectSpread(_objectSpread({},userInfo),{},{accessToken:data.accessToken,refreshToken:userInfo.refreshToken});// update the local storage\nlocalStorage.setItem('userInfo',JSON.stringify(updatedUser));dispatch({type:USER_LOGIN_SUCCESS,payload:updatedUser});}else if(!data.success){// set a variable in local storage which redirects to login page, if this refresh thing fails\nlocalStorage.removeItem('userInfo');localStorage.setItem('redirectLogin','true');// after refresh token also expires, redirect to login page after loggin out the user\ndispatch({type:USER_LOGOUT});}case 13:_context2.next=18;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](0);dispatch({type:USER_LOGIN_REFRESH_FAILURE,payload:_context2.t0.response&&_context2.t0.response.data.message?_context2.t0.response.data.message:_context2.t0.message});case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[0,15]]);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}();};// logout by removing all local storage info\nexport var logoutUser=function logoutUser(){return function(dispatch){localStorage.removeItem('userInfo');localStorage.removeItem('redirectLogin');localStorage.removeItem('cartItems');dispatch({type:USER_LOGOUT});dispatch({type:USER_DETAILS_RESET});dispatch({type:ORDER_CREATE_RESET});dispatch({type:ORDER_USER_LIST_RESET});};};// register a new user with the form for name, email, password\nexport var registerUser=function registerUser(name,email,password){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var config,_yield$axios$post3,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:USER_REGISTER_REQUEST});config={headers:{'Content-Type':'application/json'}};_context3.next=5;return axios.post('/api/users/',{name:name,email:email,password:password},config);case 5:_yield$axios$post3=_context3.sent;data=_yield$axios$post3.data;dispatch({type:USER_REGISTER_SUCCESS,payload:data});_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);dispatch({type:USER_REGISTER_FAILURE,payload:_context3.t0.response&&_context3.t0.response.data.message?_context3.t0.response.data.message:_context3.t0.message});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function(_x4){return _ref3.apply(this,arguments);};}();};// send an email for verification of the newly registered account\nexport var sendVerficationEmail=function sendVerficationEmail(email){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch){var config,_yield$axios$post4,data;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;dispatch({type:USER_EMAIL_VERIFICATION_REQUEST});config={headers:{'Content-Type':'application/json'}};_context4.next=5;return axios.post('/api/users/confirm',{email:email},config);case 5:_yield$axios$post4=_context4.sent;data=_yield$axios$post4.data;dispatch({type:USER_EMAIL_VERIFICATION_SUCCESS,payload:data});_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);dispatch({type:USER_EMAIL_VERIFICATION_FAILURE,payload:_context4.t0.response&&_context4.t0.response.data.message?_context4.t0.response.data.message:_context4.t0.message});case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[0,10]]);}));return function(_x5){return _ref4.apply(this,arguments);};}();};// take the email token sent from the mail, and confirm the account once the link is clicked\nexport var confirmUser=function confirmUser(emailToken){var alreadyLoggedIn=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch,getState){var _yield$axios$get,data;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;dispatch({type:USER_CONFIRM_REQUEST});_context5.next=4;return axios.get(\"/api/users/confirm/\".concat(emailToken));case 4:_yield$axios$get=_context5.sent;data=_yield$axios$get.data;// remove variable meant to prompt the user for email verification\nlocalStorage.removeItem('promptEmailVerfication');dispatch({type:USER_CONFIRM_SUCCESS,payload:true});if(alreadyLoggedIn){dispatch({type:USER_LOGIN_SUCCESS,payload:data});dispatch({type:USER_LOGIN_REFRESH_SUCCESS,payload:data.refreshToken});localStorage.setItem('refreshToken',data.refreshToken);localStorage.setItem('userInfo',JSON.stringify(data));}localStorage.removeItem('promptEmailVerfication');_context5.next=15;break;case 12:_context5.prev=12;_context5.t0=_context5[\"catch\"](0);dispatch({type:USER_CONFIRM_FAILURE,payload:_context5.t0.response&&_context5.t0.response.data.message?_context5.t0.response.data.message:_context5.t0.message});case 15:case\"end\":return _context5.stop();}}},_callee5,null,[[0,12]]);}));return function(_x6,_x7){return _ref5.apply(this,arguments);};}();};// reset the user password and send one more verification email from the server\nexport var resetUserPassword=function resetUserPassword(passwordToken,password){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(dispatch){var config,_yield$axios$put,data;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;dispatch({type:USER_RESET_PASSWORD_REQUEST});// make the api call to reset the password\nconfig={headers:{'Content-Type':'application/json'}};_context6.next=5;return axios.put('/api/users/reset',{passwordToken:passwordToken,password:password},config);case 5:_yield$axios$put=_context6.sent;data=_yield$axios$put.data;dispatch({type:USER_RESET_PASSWORD_SUCCESS,payload:data});_context6.next=13;break;case 10:_context6.prev=10;_context6.t0=_context6[\"catch\"](0);dispatch({type:USER_RESET_PASSWORD_FAILURE,payload:_context6.t0.response&&_context6.t0.response.data.message?_context6.t0.response.data.message:_context6.t0.message});case 13:case\"end\":return _context6.stop();}}},_callee6,null,[[0,10]]);}));return function(_x8){return _ref6.apply(this,arguments);};}();};// get user details for profile page\nexport var getUserDetails=function getUserDetails(id){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(dispatch,getState){var _getState2,userInfo,config,_yield$axios$post5,data,_config,_yield$axios$get2,_data;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;dispatch({type:USER_DETAILS_REQUEST});_getState2=getState(),userInfo=_getState2.userLogin.userInfo;if(!userInfo.isSocialLogin){_context7.next=12;break;}config={headers:{'Content-Type':'application/json'}};_context7.next=7;return axios.post('/api/users/passport/data/',{id:id},config);case 7:_yield$axios$post5=_context7.sent;data=_yield$axios$post5.data;dispatch({type:USER_DETAILS_SUCCESS,payload:_objectSpread(_objectSpread({},data),{},{isSocialLogin:true})});_context7.next=18;break;case 12:_config={headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(userInfo.accessToken)}};_context7.next=15;return axios.get(\"/api/users/\".concat(id),_config);case 15:_yield$axios$get2=_context7.sent;_data=_yield$axios$get2.data;dispatch({type:USER_DETAILS_SUCCESS,payload:_objectSpread(_objectSpread({},_data),{},{isSocialLogin:false})});case 18:_context7.next=23;break;case 20:_context7.prev=20;_context7.t0=_context7[\"catch\"](0);dispatch({type:USER_DETAILS_FAILURE,payload:_context7.t0.response&&_context7.t0.response.data.message?_context7.t0.response.data.message:_context7.t0.message});case 23:case\"end\":return _context7.stop();}}},_callee7,null,[[0,20]]);}));return function(_x9,_x10){return _ref7.apply(this,arguments);};}();};// update details in the user profile page\nexport var updateUserProfile=function updateUserProfile(user){return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(dispatch,getState){var _getState3,userInfo,config,isSocial,_yield$axios$put2,data;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;dispatch({type:USER_PROFILE_UPDATE_REQUEST});_getState3=getState(),userInfo=_getState3.userLogin.userInfo;// different headers are used when it is a social login, and when it is a std email login\nconfig=userInfo.isSocialLogin?{headers:{Authorization:\"SocialLogin \".concat(userInfo.id)}}:{headers:{Authorization:\"Bearer \".concat(userInfo.accessToken)}};isSocial=userInfo.isSocialLogin;_context8.next=7;return axios.put('/api/users/profile',user,config);case 7:_yield$axios$put2=_context8.sent;data=_yield$axios$put2.data;dispatch({type:USER_PROFILE_UPDATE_SUCCESS,payload:_objectSpread(_objectSpread({},data),{},{isSocialLogin:isSocial})});// login the user after updating the information\ndispatch({type:USER_LOGIN_SUCCESS,payload:_objectSpread(_objectSpread({},data),{},{isSocialLogin:isSocial})});localStorage.setItem('userInfo',JSON.stringify(_objectSpread(_objectSpread({},data),{},{isSocialLogin:isSocial})));_context8.next=17;break;case 14:_context8.prev=14;_context8.t0=_context8[\"catch\"](0);dispatch({type:USER_PROFILE_UPDATE_FAILURE,payload:_context8.t0.response&&_context8.t0.response.data.message?_context8.t0.response.data.message:_context8.t0.message});case 17:case\"end\":return _context8.stop();}}},_callee8,null,[[0,14]]);}));return function(_x11,_x12){return _ref8.apply(this,arguments);};}();};// fetch a list of all users, for the admin panel view\nexport var listAllUsers=function listAllUsers(){var pageNumber=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';return/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(dispatch,getState){var _getState4,userInfo,config,_yield$axios$get3,data;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.prev=0;dispatch({type:USER_LIST_REQUEST});_getState4=getState(),userInfo=_getState4.userLogin.userInfo;// different headers are used when it is a social login, and when it is a std email login\nconfig=userInfo.isSocialLogin?{headers:{Authorization:\"SocialLogin \".concat(userInfo.id)}}:{headers:{Authorization:\"Bearer \".concat(userInfo.accessToken)}};_context9.next=6;return axios.get(\"/api/users?pageNumber=\".concat(pageNumber),config);case 6:_yield$axios$get3=_context9.sent;data=_yield$axios$get3.data;dispatch({type:USER_LIST_SUCCESS,payload:data});_context9.next=14;break;case 11:_context9.prev=11;_context9.t0=_context9[\"catch\"](0);dispatch({type:USER_LIST_FAILURE,payload:_context9.t0.response&&_context9.t0.response.data.message?_context9.t0.response.data.message:_context9.t0.message});case 14:case\"end\":return _context9.stop();}}},_callee9,null,[[0,11]]);}));return function(_x13,_x14){return _ref9.apply(this,arguments);};}();};// delete the user from the admin panel view\nexport var deleteUser=function deleteUser(id){return/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(dispatch,getState){var _getState5,userInfo,config;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.prev=0;dispatch({type:USER_DELETE_REQUEST});_getState5=getState(),userInfo=_getState5.userLogin.userInfo;// different headers are used when it is a social login, and when it is a std email login\nconfig=userInfo.isSocialLogin?{headers:{Authorization:\"SocialLogin \".concat(userInfo.id)}}:{headers:{Authorization:\"Bearer \".concat(userInfo.accessToken)}};_context10.next=6;return axios.delete(\"/api/users/\".concat(id),config);case 6:dispatch({type:USER_DELETE_SUCCESS});_context10.next=12;break;case 9:_context10.prev=9;_context10.t0=_context10[\"catch\"](0);dispatch({type:USER_DELETE_FAILURE,payload:_context10.t0.response&&_context10.t0.response.data.message?_context10.t0.response.data.message:_context10.t0.message});case 12:case\"end\":return _context10.stop();}}},_callee10,null,[[0,9]]);}));return function(_x15,_x16){return _ref10.apply(this,arguments);};}();};// update the user details\nexport var updateUser=function updateUser(user){return/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(dispatch,getState){var _getState6,userInfo,config,isSocial,_yield$axios$put3,data,newUserInfo;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.prev=0;dispatch({type:USER_UPDATE_REQUEST});_getState6=getState(),userInfo=_getState6.userLogin.userInfo;config=userInfo.isSocialLogin?{headers:{'Content-Type':'application/json',Authorization:\"SocialLogin \".concat(userInfo.id)}}:{headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(userInfo.accessToken)}};isSocial=userInfo.isSocialLogin;_context11.next=7;return axios.put(\"/api/users/\".concat(user._id),user,config);case 7:_yield$axios$put3=_context11.sent;data=_yield$axios$put3.data;dispatch({type:USER_UPDATE_SUCCESS});dispatch({type:USER_DETAILS_SUCCESS,payload:_objectSpread(_objectSpread({},data),{},{isSocialLogin:isSocial})});if(data.id===userInfo.id){// // login the user after updating the information\nnewUserInfo=_objectSpread(_objectSpread(_objectSpread({},userInfo),userInfo),{},{id:data.id,name:data.name,email:data.email,isAdmin:data.isAdmin,isConfirmed:data.isConfirmed});dispatch({type:USER_LOGIN_SUCCESS,payload:newUserInfo});localStorage.setItem('userInfo',JSON.stringify(newUserInfo));}_context11.next=17;break;case 14:_context11.prev=14;_context11.t0=_context11[\"catch\"](0);dispatch({type:USER_UPDATE_FAILURE,payload:_context11.t0.response&&_context11.t0.response.data.message?_context11.t0.response.data.message:_context11.t0.message});case 17:case\"end\":return _context11.stop();}}},_callee11,null,[[0,14]]);}));return function(_x17,_x18){return _ref11.apply(this,arguments);};}();};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_LOGIN_REFRESH_REQUEST","USER_LOGIN_REFRESH_SUCCESS","USER_LOGIN_REFRESH_FAILURE","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_RESET_PASSWORD_REQUEST","USER_RESET_PASSWORD_SUCCESS","USER_RESET_PASSWORD_FAILURE","USER_EMAIL_VERIFICATION_REQUEST","USER_EMAIL_VERIFICATION_SUCCESS","USER_EMAIL_VERIFICATION_FAILURE","USER_CONFIRM_REQUEST","USER_CONFIRM_SUCCESS","USER_CONFIRM_FAILURE","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAILURE","USER_DETAILS_RESET","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAILURE","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAILURE","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAILURE","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAILURE","ORDER_CREATE_RESET","ORDER_USER_LIST_RESET","axios","loginUser","email","password","dispatch","type","config","headers","post","data","payload","isSocialLogin","refreshToken","localStorage","setItem","JSON","stringify","removeItem","response","message","refreshLogin","getState","userInfo","userLogin","token","success","updatedUser","accessToken","logoutUser","registerUser","name","sendVerficationEmail","confirmUser","emailToken","alreadyLoggedIn","get","resetUserPassword","passwordToken","put","getUserDetails","id","Authorization","updateUserProfile","user","isSocial","listAllUsers","pageNumber","deleteUser","delete","updateUser","_id","newUserInfo","isAdmin","isConfirmed"],"sources":["C:/Users/qvuqv/OneDrive/Documents/UIT/ecom2/MERN-Ecommerce/frontend/src/actions/userActions.js"],"sourcesContent":["import {\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAILURE,\r\n\tUSER_LOGIN_REFRESH_REQUEST,\r\n\tUSER_LOGIN_REFRESH_SUCCESS,\r\n\tUSER_LOGIN_REFRESH_FAILURE,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_FAILURE,\r\n\tUSER_RESET_PASSWORD_REQUEST,\r\n\tUSER_RESET_PASSWORD_SUCCESS,\r\n\tUSER_RESET_PASSWORD_FAILURE,\r\n\tUSER_EMAIL_VERIFICATION_REQUEST,\r\n\tUSER_EMAIL_VERIFICATION_SUCCESS,\r\n\tUSER_EMAIL_VERIFICATION_FAILURE,\r\n\tUSER_CONFIRM_REQUEST,\r\n\tUSER_CONFIRM_SUCCESS,\r\n\tUSER_CONFIRM_FAILURE,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_DETAILS_FAILURE,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_PROFILE_UPDATE_REQUEST,\r\n\tUSER_PROFILE_UPDATE_SUCCESS,\r\n\tUSER_PROFILE_UPDATE_FAILURE,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAILURE,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAILURE,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAILURE,\r\n} from '../constants/userConstants';\r\nimport {\r\n\tORDER_CREATE_RESET,\r\n\tORDER_USER_LIST_RESET,\r\n} from '../constants/orderConstants';\r\nimport axios from 'axios';\r\n\r\n// login an user, can be a social login or a normal email verified login\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'/api/users/login',\r\n\t\t\t{ email, password },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: { ...data, isSocialLogin: false },\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_REFRESH_SUCCESS,\r\n\t\t\tpayload: data.refreshToken,\r\n\t\t});\r\n\t\t// store the refresh token and the rest of the user info in the local storage\r\n\t\tlocalStorage.setItem('refreshToken', data.refreshToken);\r\n\t\tlocalStorage.setItem(\r\n\t\t\t'userInfo',\r\n\t\t\tJSON.stringify({ ...data, isSocialLogin: false })\r\n\t\t);\r\n\t\t// remove the variable that helps prompt the user that email is not verified, each time they login\r\n\t\tlocalStorage.removeItem('promptEmailVerfication');\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// used for refreshing the access tokens when the user logs in using email and password\r\nexport const refreshLogin = (email) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_LOGIN_REFRESH_REQUEST });\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\t// avoid this if social login\r\n\t\tif (userInfo.isSocialLogin) {\r\n\t\t\tdispatch({ type: USER_LOGIN_REFRESH_SUCCESS, payload: null });\r\n\t\t} else {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tconst { data } = await axios.post(\r\n\t\t\t\t'/api/users/refresh',\r\n\t\t\t\t{\r\n\t\t\t\t\temail,\r\n\t\t\t\t\ttoken: userInfo.refreshToken,\r\n\t\t\t\t},\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\r\n\t\t\tif (data.success) {\r\n\t\t\t\tdispatch({ type: USER_LOGIN_REFRESH_SUCCESS, payload: data });\r\n\t\t\t\tconst updatedUser = {\r\n\t\t\t\t\t...userInfo,\r\n\t\t\t\t\taccessToken: data.accessToken,\r\n\t\t\t\t\trefreshToken: userInfo.refreshToken,\r\n\t\t\t\t};\r\n\t\t\t\t// update the local storage\r\n\t\t\t\tlocalStorage.setItem('userInfo', JSON.stringify(updatedUser));\r\n\t\t\t\tdispatch({ type: USER_LOGIN_SUCCESS, payload: updatedUser });\r\n\t\t\t} else if (!data.success) {\r\n\t\t\t\t// set a variable in local storage which redirects to login page, if this refresh thing fails\r\n\t\t\t\tlocalStorage.removeItem('userInfo');\r\n\t\t\t\tlocalStorage.setItem('redirectLogin', 'true'); // after refresh token also expires, redirect to login page after loggin out the user\r\n\t\t\t\tdispatch({ type: USER_LOGOUT });\r\n\t\t\t}\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_REFRESH_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// logout by removing all local storage info\r\nexport const logoutUser = () => (dispatch) => {\r\n\tlocalStorage.removeItem('userInfo');\r\n\tlocalStorage.removeItem('redirectLogin');\r\n\tlocalStorage.removeItem('cartItems');\r\n\tdispatch({ type: USER_LOGOUT });\r\n\tdispatch({ type: USER_DETAILS_RESET });\r\n\tdispatch({ type: ORDER_CREATE_RESET });\r\n\tdispatch({ type: ORDER_USER_LIST_RESET });\r\n};\r\n\r\n// register a new user with the form for name, email, password\r\nexport const registerUser = (name, email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_REGISTER_REQUEST });\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'/api/users/',\r\n\t\t\t{ name, email, password },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// send an email for verification of the newly registered account\r\nexport const sendVerficationEmail = (email) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_EMAIL_VERIFICATION_REQUEST });\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'/api/users/confirm',\r\n\t\t\t{ email },\r\n\t\t\tconfig\r\n\t\t);\r\n\t\tdispatch({ type: USER_EMAIL_VERIFICATION_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_EMAIL_VERIFICATION_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// take the email token sent from the mail, and confirm the account once the link is clicked\r\nexport const confirmUser =\r\n\t(emailToken, alreadyLoggedIn = false) =>\r\n\tasync (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({ type: USER_CONFIRM_REQUEST });\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`/api/users/confirm/${emailToken}`\r\n\t\t\t);\r\n\r\n\t\t\t// remove variable meant to prompt the user for email verification\r\n\t\t\tlocalStorage.removeItem('promptEmailVerfication');\r\n\t\t\tdispatch({ type: USER_CONFIRM_SUCCESS, payload: true });\r\n\r\n\t\t\tif (alreadyLoggedIn) {\r\n\t\t\t\tdispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: USER_LOGIN_REFRESH_SUCCESS,\r\n\t\t\t\t\tpayload: data.refreshToken,\r\n\t\t\t\t});\r\n\t\t\t\tlocalStorage.setItem('refreshToken', data.refreshToken);\r\n\t\t\t\tlocalStorage.setItem('userInfo', JSON.stringify(data));\r\n\t\t\t}\r\n\r\n\t\t\tlocalStorage.removeItem('promptEmailVerfication');\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_CONFIRM_FAILURE,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.message,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n// reset the user password and send one more verification email from the server\r\nexport const resetUserPassword =\r\n\t(passwordToken, password) => async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({ type: USER_RESET_PASSWORD_REQUEST });\r\n\r\n\t\t\t// make the api call to reset the password\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tconst { data } = await axios.put(\r\n\t\t\t\t'/api/users/reset',\r\n\t\t\t\t{ passwordToken, password },\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\r\n\t\t\tdispatch({ type: USER_RESET_PASSWORD_SUCCESS, payload: data });\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_RESET_PASSWORD_FAILURE,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.message,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n// get user details for profile page\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tif (userInfo.isSocialLogin) {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tlet { data } = await axios.post(\r\n\t\t\t\t'/api/users/passport/data/',\r\n\t\t\t\t{ id },\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_DETAILS_SUCCESS,\r\n\t\t\t\tpayload: { ...data, isSocialLogin: true },\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\tAuthorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tconst { data } = await axios.get(`/api/users/${id}`, config);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_DETAILS_SUCCESS,\r\n\t\t\t\tpayload: { ...data, isSocialLogin: false },\r\n\t\t\t});\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// update details in the user profile page\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_PROFILE_UPDATE_REQUEST });\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\t// different headers are used when it is a social login, and when it is a std email login\r\n\t\tconst config = userInfo.isSocialLogin\r\n\t\t\t? {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `SocialLogin ${userInfo.id}`,\r\n\t\t\t\t\t},\r\n\t\t\t  }\r\n\t\t\t: {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t\t\t\t},\r\n\t\t\t  };\r\n\r\n\t\tconst isSocial = userInfo.isSocialLogin;\r\n\t\tconst { data } = await axios.put('/api/users/profile', user, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_PROFILE_UPDATE_SUCCESS,\r\n\t\t\tpayload: { ...data, isSocialLogin: isSocial },\r\n\t\t});\r\n\r\n\t\t// login the user after updating the information\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: { ...data, isSocialLogin: isSocial },\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem(\r\n\t\t\t'userInfo',\r\n\t\t\tJSON.stringify({ ...data, isSocialLogin: isSocial })\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_PROFILE_UPDATE_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// fetch a list of all users, for the admin panel view\r\nexport const listAllUsers =\r\n\t(pageNumber = '') =>\r\n\tasync (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({ type: USER_LIST_REQUEST });\r\n\r\n\t\t\tconst {\r\n\t\t\t\tuserLogin: { userInfo },\r\n\t\t\t} = getState();\r\n\r\n\t\t\t// different headers are used when it is a social login, and when it is a std email login\r\n\t\t\tconst config = userInfo.isSocialLogin\r\n\t\t\t\t? {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: `SocialLogin ${userInfo.id}`,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t  }\r\n\t\t\t\t: {\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\tAuthorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t  };\r\n\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`/api/users?pageNumber=${pageNumber}`,\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\r\n\t\t\tdispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_LIST_FAILURE,\r\n\t\t\t\tpayload:\r\n\t\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t\t: error.message,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n// delete the user from the admin panel view\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_DELETE_REQUEST });\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\t// different headers are used when it is a social login, and when it is a std email login\r\n\t\tconst config = userInfo.isSocialLogin\r\n\t\t\t? {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `SocialLogin ${userInfo.id}`,\r\n\t\t\t\t\t},\r\n\t\t\t  }\r\n\t\t\t: {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t\t\t\t},\r\n\t\t\t  };\r\n\r\n\t\tawait axios.delete(`/api/users/${id}`, config);\r\n\r\n\t\tdispatch({ type: USER_DELETE_SUCCESS });\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// update the user details\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = userInfo.isSocialLogin\r\n\t\t\t? {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\tAuthorization: `SocialLogin ${userInfo.id}`,\r\n\t\t\t\t\t},\r\n\t\t\t  }\r\n\t\t\t: {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\tAuthorization: `Bearer ${userInfo.accessToken}`,\r\n\t\t\t\t\t},\r\n\t\t\t  };\r\n\r\n\t\tconst isSocial = userInfo.isSocialLogin;\r\n\t\tconst { data } = await axios.put(\r\n\t\t\t`/api/users/${user._id}`,\r\n\t\t\tuser,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({ type: USER_UPDATE_SUCCESS });\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_SUCCESS,\r\n\t\t\tpayload: { ...data, isSocialLogin: isSocial },\r\n\t\t});\r\n\r\n\t\tif (data.id === userInfo.id) {\r\n\t\t\t// // login the user after updating the information\r\n\t\t\tconst newUserInfo = {\r\n\t\t\t\t...userInfo,\r\n\t\t\t\t...userInfo,\r\n\t\t\t\tid: data.id,\r\n\t\t\t\tname: data.name,\r\n\t\t\t\temail: data.email,\r\n\t\t\t\tisAdmin: data.isAdmin,\r\n\t\t\t\tisConfirmed: data.isConfirmed,\r\n\t\t\t};\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\t\tpayload: newUserInfo,\r\n\t\t\t});\r\n\r\n\t\t\tlocalStorage.setItem('userInfo', JSON.stringify(newUserInfo));\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_FAILURE,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}