{"ast":null,"code":"import _toConsumableArray from\"C:/Users/qvuqv/OneDrive/Documents/UIT/ecom2/MERN-Ecommerce/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{createStore,applyMiddleware,combineReducers}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{productListReducer,productDetailsReducer,productDeleteReducer,productCreateReducer,productCreateReviewReducer,productUpdateReducer,productTopRatedReducer}from'./reducers/productReducers';import{cartReducer}from'./reducers/cartReducers';import{userLoginReducer,userLoginRefreshReducer,userRegisterReducer,userSendEmailVerficationReducer,userConfirmReducer,userResetPasswordReducer,userDetailsReducer,userProfileUpdateReducer,userListReducer,userDeleteReducer,userUpdateReducer}from'./reducers/userReducers';import{orderCreateReducer,orderDetailsReducer,orderPayReducer,orderDeliverReducer,orderListUserReducer,orderListAllReducer}from'./reducers/orderReducers';// combine all the above reducers to the store\nvar reducer=combineReducers({productList:productListReducer,productDetails:productDetailsReducer,productDelete:productDeleteReducer,productCreate:productCreateReducer,productCreateReview:productCreateReviewReducer,productUpdate:productUpdateReducer,productTopRated:productTopRatedReducer,cart:cartReducer,userLogin:userLoginReducer,userLoginRefresh:userLoginRefreshReducer,userRegister:userRegisterReducer,userSendEmailVerfication:userSendEmailVerficationReducer,userConfirm:userConfirmReducer,userResetPassword:userResetPasswordReducer,userDetails:userDetailsReducer,userProfileUpdate:userProfileUpdateReducer,userList:userListReducer,userDelete:userDeleteReducer,userUpdate:userUpdateReducer,orderCreate:orderCreateReducer,orderDetails:orderDetailsReducer,orderPay:orderPayReducer,orderDeliver:orderDeliverReducer,orderListUser:orderListUserReducer,orderListAll:orderListAllReducer});// get a few cart items from the local storage\nvar cartItemsFromLocalStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[];// get the user info from local storage\nvar userInfoFromLocalStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;// get the shipping address from local storage\nvar shippingAddressFromLocalStorage=localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{};// get refresh token from the local storage\nvar tokenInfoFromLocalStoage=localStorage.getItem('refreshToken')?localStorage.getItem('refreshToken'):null;// set the initial state based on above local storage values\nvar initialState={cart:{cartItems:_toConsumableArray(cartItemsFromLocalStorage),shippingAddress:shippingAddressFromLocalStorage},userLogin:{userInfo:userInfoFromLocalStorage},userLoginRefresh:{tokenInfo:tokenInfoFromLocalStoage}};// user redux thunk for making async calls\nvar middleware=[thunk];// create the redux store\nvar store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productCreateReviewReducer","productUpdateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userLoginRefreshReducer","userRegisterReducer","userSendEmailVerficationReducer","userConfirmReducer","userResetPasswordReducer","userDetailsReducer","userProfileUpdateReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","orderListUserReducer","orderListAllReducer","reducer","productList","productDetails","productDelete","productCreate","productCreateReview","productUpdate","productTopRated","cart","userLogin","userLoginRefresh","userRegister","userSendEmailVerfication","userConfirm","userResetPassword","userDetails","userProfileUpdate","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListUser","orderListAll","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","shippingAddressFromLocalStorage","tokenInfoFromLocalStoage","initialState","cartItems","shippingAddress","userInfo","tokenInfo","middleware","store"],"sources":["C:/Users/qvuqv/OneDrive/Documents/UIT/ecom2/MERN-Ecommerce/frontend/src/store.js"],"sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport {\r\n\tproductListReducer,\r\n\tproductDetailsReducer,\r\n\tproductDeleteReducer,\r\n\tproductCreateReducer,\r\n\tproductCreateReviewReducer,\r\n\tproductUpdateReducer,\r\n\tproductTopRatedReducer,\r\n} from './reducers/productReducers';\r\n\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\nimport {\r\n\tuserLoginReducer,\r\n\tuserLoginRefreshReducer,\r\n\tuserRegisterReducer,\r\n\tuserSendEmailVerficationReducer,\r\n\tuserConfirmReducer,\r\n\tuserResetPasswordReducer,\r\n\tuserDetailsReducer,\r\n\tuserProfileUpdateReducer,\r\n\tuserListReducer,\r\n\tuserDeleteReducer,\r\n\tuserUpdateReducer,\r\n} from './reducers/userReducers';\r\n\r\nimport {\r\n\torderCreateReducer,\r\n\torderDetailsReducer,\r\n\torderPayReducer,\r\n\torderDeliverReducer,\r\n\torderListUserReducer,\r\n\torderListAllReducer,\r\n} from './reducers/orderReducers';\r\n\r\n// combine all the above reducers to the store\r\nconst reducer = combineReducers({\r\n\tproductList: productListReducer,\r\n\tproductDetails: productDetailsReducer,\r\n\tproductDelete: productDeleteReducer,\r\n\tproductCreate: productCreateReducer,\r\n\tproductCreateReview: productCreateReviewReducer,\r\n\tproductUpdate: productUpdateReducer,\r\n\tproductTopRated: productTopRatedReducer,\r\n\tcart: cartReducer,\r\n\tuserLogin: userLoginReducer,\r\n\tuserLoginRefresh: userLoginRefreshReducer,\r\n\tuserRegister: userRegisterReducer,\r\n\tuserSendEmailVerfication: userSendEmailVerficationReducer,\r\n\tuserConfirm: userConfirmReducer,\r\n\tuserResetPassword: userResetPasswordReducer,\r\n\tuserDetails: userDetailsReducer,\r\n\tuserProfileUpdate: userProfileUpdateReducer,\r\n\tuserList: userListReducer,\r\n\tuserDelete: userDeleteReducer,\r\n\tuserUpdate: userUpdateReducer,\r\n\torderCreate: orderCreateReducer,\r\n\torderDetails: orderDetailsReducer,\r\n\torderPay: orderPayReducer,\r\n\torderDeliver: orderDeliverReducer,\r\n\torderListUser: orderListUserReducer,\r\n\torderListAll: orderListAllReducer,\r\n});\r\n\r\n// get a few cart items from the local storage\r\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems')\r\n\t? JSON.parse(localStorage.getItem('cartItems'))\r\n\t: [];\r\n\r\n// get the user info from local storage\r\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo')\r\n\t? JSON.parse(localStorage.getItem('userInfo'))\r\n\t: null;\r\n\r\n// get the shipping address from local storage\r\nconst shippingAddressFromLocalStorage = localStorage.getItem('shippingAddress')\r\n\t? JSON.parse(localStorage.getItem('shippingAddress'))\r\n\t: {};\r\n\r\n// get refresh token from the local storage\r\nconst tokenInfoFromLocalStoage = localStorage.getItem('refreshToken')\r\n\t? localStorage.getItem('refreshToken')\r\n\t: null;\r\n\r\n// set the initial state based on above local storage values\r\nconst initialState = {\r\n\tcart: {\r\n\t\tcartItems: [...cartItemsFromLocalStorage],\r\n\t\tshippingAddress: shippingAddressFromLocalStorage,\r\n\t},\r\n\tuserLogin: {\r\n\t\tuserInfo: userInfoFromLocalStorage,\r\n\t},\r\n\tuserLoginRefresh: {\r\n\t\ttokenInfo: tokenInfoFromLocalStoage,\r\n\t},\r\n};\r\n\r\n// user redux thunk for making async calls\r\nconst middleware = [thunk];\r\n\r\n// create the redux store\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}